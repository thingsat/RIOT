From 504519cd60f68990e853b2e0a811a31915060d9d Mon Sep 17 00:00:00 2001
From: Francisco Molina <femolina@uc.cl>
Date: Fri, 8 Apr 2022 17:44:13 +0200
Subject: [PATCH 08/11] src/csp_io.h: send direct pass idout struct by
 reference

---
 src/csp_bridge.c |  4 ++--
 src/csp_io.c     | 36 ++++++++++++++++++++----------------
 src/csp_io.h     |  4 ++--
 src/csp_rdp.c    |  4 ++--
 src/csp_route.c  |  2 +-
 5 files changed, 27 insertions(+), 23 deletions(-)

diff --git a/src/csp_bridge.c b/src/csp_bridge.c
index d97ded9..1970f97 100644
--- a/src/csp_bridge.c
+++ b/src/csp_bridge.c
@@ -52,6 +52,6 @@ void csp_bridge_work(void) {
 	}
 
 	/* Send to the interface directly, no hassle */
-	csp_send_direct_iface(packet->id, packet, destif, CSP_NO_VIA_ADDRESS, 0);
-	
+	csp_send_direct_iface(&packet->id, packet, destif, CSP_NO_VIA_ADDRESS, 0);
+
 }
diff --git a/src/csp_io.c b/src/csp_io.c
index e54f191..16d3a09 100644
--- a/src/csp_io.c
+++ b/src/csp_io.c
@@ -79,7 +79,7 @@ void csp_id_copy(csp_id_t * target, csp_id_t * source) {
 	target->flags = source->flags;
 }
 
-void csp_send_direct(csp_id_t idout, csp_packet_t * packet, csp_iface_t * routed_from) {
+void csp_send_direct(csp_id_t* idout, csp_packet_t * packet, csp_iface_t * routed_from) {
 
 	int from_me = (routed_from == NULL ? 1 : 0);
 
@@ -89,9 +89,9 @@ void csp_send_direct(csp_id_t idout, csp_packet_t * packet, csp_iface_t * routed
 	csp_packet_t * copy = NULL;
 	int local_found = 0;
 
-	while ((iface = csp_iflist_get_by_subnet(idout.dst, iface)) != NULL) {
-		
-		/* Do not send back to same inteface (split horizon) 
+	while ((iface = csp_iflist_get_by_subnet(idout->dst, iface)) != NULL) {
+
+		/* Do not send back to same inteface (split horizon)
 		 * This check is is similar to that below, but faster */
 		if (iface == routed_from) {
 			continue;
@@ -103,8 +103,9 @@ void csp_send_direct(csp_id_t idout, csp_packet_t * packet, csp_iface_t * routed
 		}
 
 		/* Apply outgoing interface address to packet */
-		idout.src = iface->addr;
-		
+		idout->src = iface->addr;
+
+
 		/* Todo: Find an elegant way to avoid making a copy when only a single destination interface
 		 * is found. But without looping the list twice. And without using stack memory.
 		 * Is this even possible? */
@@ -122,7 +123,7 @@ void csp_send_direct(csp_id_t idout, csp_packet_t * packet, csp_iface_t * routed
 	}
 
 	/* Try to send via routing table */
-	csp_route_t * route = csp_rtable_find_route(idout.dst);
+	csp_route_t * route = csp_rtable_find_route(idout->dst);
 	if (route != NULL) {
 		csp_send_direct_iface(idout, packet, route->iface, route->via, from_me);
 		return;
@@ -138,12 +139,15 @@ __attribute__((weak)) void csp_output_hook(csp_id_t idout, csp_packet_t * packet
 	return;
 }
 
-void csp_send_direct_iface(csp_id_t idout, csp_packet_t * packet, csp_iface_t * iface, uint16_t via, int from_me) {
+void csp_send_direct_iface(csp_id_t* idout, csp_packet_t * packet, csp_iface_t * iface, uint16_t via, int from_me) {
 
 	csp_output_hook(idout, packet, iface, via, from_me);
 
 	/* Copy identifier to packet (before crc and hmac) */
-	csp_id_copy(&packet->id, &idout);
+	if(idout != &packet->id) {
+		csp_id_copy(&packet->id, idout);
+	}
+
 
 #if (CSP_USE_PROMISC)
 	/* Loopback traffic is added to promisc queue by the router */
@@ -154,9 +158,8 @@ void csp_send_direct_iface(csp_id_t idout, csp_packet_t * packet, csp_iface_t *
 
 	/* Only encrypt packets from the current node */
 	if (from_me) {
-
 		/* Append HMAC */
-		if (idout.flags & CSP_FHMAC) {
+		if (idout->flags & CSP_FHMAC) {
 #if (CSP_USE_HMAC)
 			/* Calculate and add HMAC (does not include header for backwards compatability with csp1.x) */
 			if (csp_hmac_append(packet, false) != CSP_ERR_NONE) {
@@ -170,7 +173,7 @@ void csp_send_direct_iface(csp_id_t idout, csp_packet_t * packet, csp_iface_t *
 		}
 
 		/* Append CRC32 */
-		if (idout.flags & CSP_FCRC32) {
+		if (idout->flags & CSP_FCRC32) {
 			/* Calculate and add CRC32 (does not include header for backwards compatability with csp1.x) */
 			if (csp_crc32_append(packet) != CSP_ERR_NONE) {
 				/* CRC32 append failed */
@@ -221,7 +224,7 @@ void csp_send(csp_conn_t * conn, csp_packet_t * packet) {
 	}
 #endif
 
-	csp_send_direct(conn->idout, packet, NULL);
+	csp_send_direct(&conn->idout, packet, NULL);
 
 }
 
@@ -319,7 +322,9 @@ void csp_sendto(uint8_t prio, uint16_t dest, uint8_t dport, uint8_t src_port, ui
 	packet->id.sport = src_port;
 	packet->id.pri = prio;
 
-	csp_send_direct(packet->id, packet, NULL);
+	printf("set outgoing address %"PRIx16":%d\n", packet->id.src, packet->id.sport);
+
+	csp_send_direct(&packet->id, packet, NULL);
 
 }
 
@@ -331,6 +336,5 @@ void csp_sendto_reply(const csp_packet_t * request_packet, csp_packet_t * reply_
 	if (opts & CSP_O_SAME) {
 		reply_packet->id.flags = request_packet->id.flags;
 	}
-
-	return csp_sendto(request_packet->id.pri, request_packet->id.src, request_packet->id.sport, request_packet->id.dport, opts, reply_packet);
+	csp_sendto(request_packet->id.pri, request_packet->id.src, request_packet->id.sport, request_packet->id.dport, opts, reply_packet);
 }
diff --git a/src/csp_io.h b/src/csp_io.h
index 3b0307f..a4030ed 100644
--- a/src/csp_io.h
+++ b/src/csp_io.h
@@ -12,5 +12,5 @@
  * 
  */
 
-void csp_send_direct(csp_id_t idout, csp_packet_t * packet, csp_iface_t * routed_from);
-void csp_send_direct_iface(csp_id_t idout, csp_packet_t * packet, csp_iface_t * iface, uint16_t via, int from_me);
+void csp_send_direct(csp_id_t* idout, csp_packet_t * packet, csp_iface_t * routed_from);
+void csp_send_direct_iface(csp_id_t* idout, csp_packet_t * packet, csp_iface_t * iface, uint16_t via, int from_me);
diff --git a/src/csp_rdp.c b/src/csp_rdp.c
index c17129f..ddadcf3 100644
--- a/src/csp_rdp.c
+++ b/src/csp_rdp.c
@@ -158,7 +158,7 @@ static int csp_rdp_send_cmp(csp_conn_t * conn, csp_packet_t * packet, int flags,
 					 packet->length, (unsigned int)(packet->length - sizeof(rdp_header_t)));
 
 	/* Send packet to IF */
-	csp_send_direct(idout, packet, NULL);
+	csp_send_direct(&idout, packet, NULL);
 
 	/* Update last ACK time stamp */
 	if (flags & RDP_ACK) {
@@ -479,7 +479,7 @@ void csp_rdp_check_timeouts(csp_conn_t * conn) {
 			/* Send copy to tx_queue */
 			packet->timestamp_tx = csp_get_ms();
 			csp_packet_t * new_packet = csp_buffer_clone(packet);
-			csp_send_direct(conn->idout, new_packet, NULL);
+			csp_send_direct(&conn->idout, new_packet, NULL);
 		}
 
 		/* Requeue the TX element */
diff --git a/src/csp_route.c b/src/csp_route.c
index 7067261..3a2d8cf 100644
--- a/src/csp_route.c
+++ b/src/csp_route.c
@@ -158,7 +158,7 @@ int csp_route_work(void) {
 	if (!is_to_me) {
 
 		/* Otherwise, actually send the message */
-		csp_send_direct(packet->id, packet, input.iface);
+		csp_send_direct(&packet->id, packet, input.iface);
 		return CSP_ERR_NONE;
 
 	}
-- 
2.32.0

